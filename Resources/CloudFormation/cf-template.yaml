Description: Creates a VPC and an Amazon Redshift cluster within it.

Parameters:

  RedshiftPassword:
    NoEcho: true
    Description: Redshift password
    Type: String
    MinLength: 8
    MaxLength: 64
    AllowedPattern: ^((?=.*\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,})*$
    ConstraintDescription: Alphanumeric characters only. Must contain a lower-case letter, an upper-case letter, and a number. Must be at least 8 characters long.

  RedshiftDatabaseName:
    Description: Redshift database name
    Type: String
    Default: warehouse
    AllowedPattern: '([a-z]|[0-9])+'

  RedshiftClusterType:
    Description: Redshift cluster type
    Type: String
    Default: multi-node
    AllowedValues:
      - single-node
      - multi-node
    ConstraintDescription: Must be single-node or multi-node.
  
  RedshiftNodes:
    Description: Number of Redshift cluster nodes (ignored for single-node clusters)
    Type: Number
    Default: '2'
    ConstraintDescription: Must be greater than 1 for multi-node clusters.
  
  RedshiftNodeType:
    Description: The type of Redshift node to be provisioned
    Type: String
    Default: dc2.large
    AllowedValues:
      - dc2.large
      - dc2.8xlarge
      - ds2.xlarge
      - ds2.8xlarge
        
  RedshiftMaxConcurrencyClusters:
    Description: Maximum Concurrency Scaling Redshift Clusters
    Type: String
    Default: '1'
    
  RedshiftIsEncryptionAtRest:
    Description: "Do you want to encrypt database at rest?"
    Type: String
    Default: 'true'
    AllowedValues:
      - true
      - false
    ConstraintDescription: Must be true or false.

  NotificationList:
    Type: String
    Description: Email address to which Cloudwatch alerts should be sent
    Default: "abc@xyz.com"
    AllowedPattern: '^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$'
    ConstraintDescription: Provide a valid email address.

  GlueCatalogDatabase:
    Type: String
    Description: Glue Catalog database name
    Default: lake
    AllowedPattern: '([ \t\n\x0B\f\r])*|([a-z])([\-]|[a-z]|[\-]|[0-9])*'
    ConstraintDescription: Must start with a-z and contain only a-z or 0-9 or hyphen (-).


Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: Redshift Cluster Parameters
        Parameters:
          - RedshiftPassword
          - RedshiftClusterType
          - RedshiftNodeType
          - RedshiftNodes
          - RedshiftDatabaseName
      -
        Label:
          default: Redshift additional/optional Parameters
        Parameters:
          - RedshiftMaxConcurrencyClusters
          - RedshiftIsEncryptionAtRest
          - GlueCatalogDatabase
          - NotificationList


Conditions:
  IsMultiNodeCluster: !Equals [!Ref RedshiftClusterType, 'multi-node']


Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.11.12.0/22

  VPCSubnet:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: us-east-1a
      CidrBlock: 10.11.12.0/24
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-Workshop-Subnet1'

  VPCInternetGateway:
    Type: AWS::EC2::InternetGateway

  VPCInternateGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      VpcId: !Ref VPC
      InternetGatewayId: !Ref VPCInternetGateway

  VPCRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-Workshop-RouteTable'

  VPCInternetGatewayRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCInternateGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref VPCInternetGateway
      RouteTableId: !Ref VPCRouteTable

  VPCSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref VPCRouteTable
      SubnetId: !Ref VPCSubnet

  S3VPCEndpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: '*'
            Effect: Allow
            Resource: '*'
            Principal: '*'
      RouteTableIds:
        - !Ref VPCRouteTable
      ServiceName: !Join 
        - ''
        - - com.amazonaws.
          - !Ref 'AWS::Region'
          - .s3
      VpcId: !Ref VPC

  S3DataLakeBucket:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: !Join ["-", [etleap-redshift-workshop-lake, !Select [0, !Split ["-", !Select [2, !Split ["/", !Ref 'AWS::StackId']]]]]]

  DataLakeIAMUser:
    Type: AWS::IAM::User
    Properties: 
      Policies:
        -
          PolicyName: !Join [ "-", [!Ref 'AWS::StackName', "Lake-Write-Policy"] ]
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                    - s3:GetObject
                    - s3:ListBucket
                Resource:
                    - "arn:aws:s3:::etleap-redshift-devdays-intermediate/output/*"
              -
                Effect: "Allow"
                Action:
                    - s3:ListBucket
                Resource:
                    - "arn:aws:s3:::etleap-redshift-devdays-intermediate"
              -
                Effect: "Allow"
                Action:
                    - s3:GetObject
                    - s3:PutObject
                    - s3:DeleteObject
                Resource:
                    - !Join [ '', [ "arn:aws:s3:::", !Ref S3DataLakeBucket , "*" ] ]
              -
                Effect: "Allow"
                Action:
                    - s3:ListBucket
                Resource:
                    - !Join [ '', [ "arn:aws:s3:::", !Ref S3DataLakeBucket ] ]
              -
                Effect: Allow
                Action:
                    - glue:CreateTable
                    - glue:DeleteTable
                    - glue:UpdateTable
                    - glue:BatchCreatePartition
                Resource:
                    - "*"

      UserName: !Join ["-", [etleap-redshift-workshop-lake-user, !Select [0, !Split ["-", !Select [2, !Split ["/", !Ref 'AWS::StackId']]]]]]

  RedshiftSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Enable inbound access from Etleap to Redshift."
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - CidrIp: 54.83.203.147/32
          IpProtocol: tcp
          FromPort: 5439
          ToPort: 5439
        - CidrIp: 54.235.178.140/32
          IpProtocol: tcp
          FromPort: 5439
          ToPort: 5439
        - CidrIp: !GetAtt 'VPC.CidrBlock'
          IpProtocol: tcp
          FromPort: 5439
          ToPort: 5439
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-Workshop-Redshift-SecurityGroup'

  RedshiftClusterSubnetGroup:
    Type: AWS::Redshift::ClusterSubnetGroup
    Properties: 
      Description: "Etleap Redshift Workshop"
      SubnetIds: 
        - !Ref VPCSubnet
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-Workshop-Redshift-SubnetGroup'

  RedshiftIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Join [ "-", [!Ref 'AWS::StackName', "RedshiftSpectrumRole"] ]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "redshift.amazonaws.com"
                - "glue.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: !Join [ "-", [!Ref 'AWS::StackName', "Spectrum-Glue-Access-Policy"] ]
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                    - s3:GetBucketLocation
                    - s3:GetObject
                    - s3:ListMultipartUploadParts
                    - s3:ListBucket
                    - s3:ListBucketMultipartUploads
                Resource:
                    - !Join ['', ["arn:aws:s3:::", !Ref S3DataLakeBucket]]
                    - !Join ['', ["arn:aws:s3:::", !Ref S3DataLakeBucket, "/*"]]
              -
                Effect: Allow
                Action:
                    - glue:CreateDatabase
                    - glue:DeleteDatabase
                    - glue:GetDatabase
                    - glue:GetDatabases
                    - glue:UpdateDatabase
                    - glue:CreateTable
                    - glue:DeleteTable
                    - glue:BatchDeleteTable
                    - glue:UpdateTable
                    - glue:GetTable
                    - glue:GetTables
                    - glue:BatchCreatePartition
                    - glue:CreatePartition
                    - glue:DeletePartition
                    - glue:BatchDeletePartition
                    - glue:UpdatePartition
                    - glue:GetPartition
                    - glue:GetPartitions
                    - glue:BatchGetPartition
                    - logs:*
                Resource:
                    - "*"
  RedshiftClusterParameterGroup:
    Type: 'AWS::Redshift::ClusterParameterGroup'
    Properties:
      Description: !Join [ " ", [ !Ref 'AWS::StackName', " - Redshift Cluster Parameter group" ]] 
      ParameterGroupFamily: redshift-1.0
      Parameters:
        - ParameterName: enable_user_activity_logging
          ParameterValue: 'false'
        - ParameterName: require_ssl
          ParameterValue: 'true'
        - ParameterName: auto_analyze
          ParameterValue: 'true'
        - ParameterName: statement_timeout
          ParameterValue: '7200000'
        - ParameterName: max_concurrency_scaling_clusters
          ParameterValue: !Ref RedshiftMaxConcurrencyClusters
        - ParameterName: "wlm_json_configuration"
          ParameterValue: "[ {\"query_group\" : [ ], \"query_group_wild_card\" : 0, \"user_group\" : [ ], \"user_group_wild_card\" : 0, \"concurrency_scaling\" : \"auto\", \"auto_wlm\" : true}, {\"short_query_queue\" : true} ]"
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-Workshop-Redshift-ParameterGroup'

  RedshiftCluster:
    Type: AWS::Redshift::Cluster
    Properties: 
      AvailabilityZone: us-east-1a
      NodeType: !Ref RedshiftNodeType
      ClusterType: !Ref RedshiftClusterType
      ClusterIdentifier: !Join ["-", [!Ref 'AWS::StackName', !Ref RedshiftDatabaseName]]
      NumberOfNodes: !If [IsMultiNodeCluster, !Ref RedshiftNodes, !Ref "AWS::NoValue"]
      NodeType: !Ref RedshiftNodeType
      DBName: !Ref RedshiftDatabaseName
      Encrypted: !Ref RedshiftIsEncryptionAtRest
      Port: 5439
      MasterUserPassword: !Ref RedshiftPassword
      MasterUsername: root
      ClusterParameterGroupName: !Ref RedshiftClusterParameterGroup
      VpcSecurityGroupIds:
        - !Ref RedshiftSecurityGroup
      AutomatedSnapshotRetentionPeriod: 7
      PubliclyAccessible: true
      ClusterSubnetGroupName: !Ref RedshiftClusterSubnetGroup
      IamRoles: 
        - !GetAtt RedshiftIAMRole.Arn
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-Workshop-Redshift-Cluster'
             
  GlueCatalogDB:
    Type: 'AWS::Glue::Database'
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
          Name:  !Join [ "-", [!Ref GlueCatalogDatabase, !Select [0, !Split ["-", !Select [2, !Split ["/", !Ref 'AWS::StackId']]]]] ]
          Description: !Join [ " ", ["AWS Glue Catalog database from Stack ", !Ref 'AWS::StackName'] ]
        
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref NotificationList
          Protocol: email
            
  DiskSpacealarmredshift:
    Type: 'AWS::CloudWatch::Alarm'
    DependsOn: RedshiftCluster
    Properties:
      MetricName: !Join 
        - ''
        - - !Ref RedshiftCluster
          - High-PercentageDiskSpaceUsed
      AlarmDescription: !Join 
        - ''
        - - DiskSpace Utilization > 85% for
          - !Ref RedshiftCluster
      Namespace: AWS/Redshift
      Statistic: Average
      Period: '300'
      EvaluationPeriods: '3'
      Threshold: '85'
      AlarmActions:
        - !Ref SNSTopic
      Dimensions:
        - Name: ClusterIdentifier
          Value: !Ref RedshiftCluster
      ComparisonOperator: GreaterThanThreshold
      Unit: Percent


Outputs:

  RedshiftClusterHostnameOutput:
    Value: !GetAtt RedshiftCluster.Endpoint.Address
    Description: Redshift hostname

  RedshiftClusterPortOutput:
    Value: !GetAtt RedshiftCluster.Endpoint.Port
    Description: Redshift port

  RedshiftClusterUsernameOutput:
    Value: root
    Description: Redshift username

  RedshiftClusterPasswordOutput:
    Value: !Ref RedshiftPassword
    Description: Redshift password

  RedshiftClusterDatabaseOutput:
    Value: !Ref RedshiftDatabaseName
    Description: Redshift database

  RedshiftClusterSchemaOutput:
    Value: public
    Description: Redshift schema

  S3DataLakeBucket:
    Value: !Ref S3DataLakeBucket
    Description: S3 Data Lake bucket

  DataLakeIAMUser:
    Value: !Ref DataLakeIAMUser
    Description: S3 Data Lake IAM User

  GlueCatalogDBName:
    Value: !Ref GlueCatalogDB
    Description: Glue Catalog database
      
  RedshiftSpectrumIAMRole:
    Value: !GetAtt RedshiftIAMRole.Arn
    Description: IAM Role assigned to the Redshift cluster
