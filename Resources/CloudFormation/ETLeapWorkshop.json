{
    "Parameters": {
        "RedshiftPassword": {
            "NoEcho": true,
            "Description": "Redshift password",
            "Type": "String",
            "MinLength": 8,
            "MaxLength": 64,
            "AllowedPattern": "^((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,})*$",
            "ConstraintDescription": "Alphanumeric characters only. Must contain a lower-case letter, an upper-case letter, and a number. Must be at least 8 characters long."
        },
        "RedshiftDatabaseName": {
            "Description": "Redshift database name",
            "Type": "String",
            "Default": "warehouse",
            "AllowedPattern": "([a-z]|[0-9])+"
        },
        "RedshiftClusterType": {
            "Description": "Redshift cluster type",
            "Type": "String",
            "Default": "multi-node",
            "AllowedValues": [
                "single-node",
                "multi-node"
            ],
            "ConstraintDescription": "Must be single-node or multi-node."
        },
        "RedshiftNodes": {
            "Description": "Number of Redshift cluster nodes (ignored for single-node clusters)",
            "Type": "Number",
            "Default": "2",
            "ConstraintDescription": "Must be greater than 1 for multi-node clusters."
        },
        "RedshiftNodeType": {
            "Description": "The type of Redshift node to be provisioned",
            "Type": "String",
            "Default": "dc2.large",
            "AllowedValues": [
                "dc2.large",
                "dc2.8xlarge",
                "ds2.xlarge",
                "ds2.8xlarge"
            ]
        },
        "RedshiftIsEncryptionAtRest": {
            "Description": "Do you want to encrypt database at rest?",
            "Type": "String",
            "Default": "true",
            "AllowedValues": [
                true,
                false
            ],
            "ConstraintDescription": "Must be true or false."
        },
        "NotificationList": {
            "Type": "String",
            "Description": "Email address to which Cloudwatch alerts should be sent",
            "Default": "abc@xyz.com",
            "AllowedPattern": "^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$",
            "ConstraintDescription": "Provide a valid email address."
        },
        "GlueCatalogDatabase": {
            "Type": "String",
            "Description": "Glue Catalog database name",
            "Default": "lake",
            "AllowedPattern": "([ \\t\\n\\x0B\\f\\r])*|([a-z])([\\-]|[a-z]|[\\-]|[0-9])*",
            "ConstraintDescription": "Must start with a-z and contain only a-z or 0-9 or hyphen (-)."
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Redshift Cluster Parameters"
                    },
                    "Parameters": [
                        "RedshiftPassword",
                        "RedshiftClusterType",
                        "RedshiftNodeType",
                        "RedshiftNodes",
                        "RedshiftDatabaseName"
                    ]
                },
                {
                    "Label": {
                        "default": "Redshift additional/optional Parameters"
                    },
                    "Parameters": [
                        "RedshiftIsEncryptionAtRest",
                        "GlueCatalogDatabase",
                        "NotificationList"
                    ]
                }
            ]
        }
    },
    "Conditions": {
        "IsMultiNodeCluster": {
            "Fn::Equals": [
                {
                    "Ref": "RedshiftClusterType"
                },
                "multi-node"
            ]
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.11.12.0/22",
                "EnableDnsHostnames": "true"
            }
        },
        "VPCSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": "us-east-1a",
                "CidrBlock": "10.11.12.0/24",
                "MapPublicIpOnLaunch": true,
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}-Workshop-Subnet1"
                        }
                    }
                ]
            }
        },
        "VPCSubnet01": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": "us-east-1b",
                "CidrBlock": "10.11.13.0/24",
                "MapPublicIpOnLaunch": true,
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}-Workshop-Subnet2"
                        }
                    }
                ]
            }
        },
        "VPCInternetGateway": {
            "Type": "AWS::EC2::InternetGateway"
        },
        "VPCInternateGatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "VPCInternetGateway"
                }
            }
        },
        "VPCRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}-Workshop-RouteTable"
                        }
                    }
                ]
            }
        },
        "VPCInternetGatewayRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "VPCInternateGatewayAttachment",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "VPCInternetGateway"
                },
                "RouteTableId": {
                    "Ref": "VPCRouteTable"
                }
            }
        },
        "VPCSubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "VPCRouteTable"
                },
                "SubnetId": {
                    "Ref": "VPCSubnet"
                }
            }
        },
        "VPCSubnetRouteTableAssociation01": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "VPCRouteTable"
                },
                "SubnetId": {
                    "Ref": "VPCSubnet01"
                }
            }
        },
        "S3VPCEndpoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": "*",
                            "Effect": "Allow",
                            "Resource": "*",
                            "Principal": "*"
                        }
                    ]
                },
                "RouteTableIds": [
                    {
                        "Ref": "VPCRouteTable"
                    }
                ],
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".s3"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "S3DataLakeBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": {
                    "Fn::Join": [
                        "-",
                        [
                            "etleap-redshift-workshop-lake",
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::Split": [
                                            "-",
                                            {
                                                "Fn::Select": [
                                                    2,
                                                    {
                                                        "Fn::Split": [
                                                            "/",
                                                            {
                                                                "Ref": "AWS::StackId"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    ]
                }
            }
        },
        "DataLakeIAMUser": {
            "Type": "AWS::IAM::User",
            "Properties": {
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "Lake-Write-Policy"
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:ListBucket"
                                    ],
                                    "Resource": [
                                        "arn:aws:s3:::etleap-redshift-devdays-intermediate/output/*"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:ListBucket"
                                    ],
                                    "Resource": [
                                        "arn:aws:s3:::etleap-redshift-devdays-intermediate"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:PutObject",
                                        "s3:DeleteObject"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:s3:::",
                                                    {
                                                        "Ref": "S3DataLakeBucket"
                                                    },
                                                    "*"
                                                ]
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:ListBucket"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:s3:::",
                                                    {
                                                        "Ref": "S3DataLakeBucket"
                                                    }
                                                ]
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "glue:CreateTable",
                                        "glue:DeleteTable",
                                        "glue:UpdateTable",
                                        "glue:BatchCreatePartition"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "UserName": {
                    "Fn::Join": [
                        "-",
                        [
                            "etleap-redshift-workshop-lake-user",
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::Split": [
                                            "-",
                                            {
                                                "Fn::Select": [
                                                    2,
                                                    {
                                                        "Fn::Split": [
                                                            "/",
                                                            {
                                                                "Ref": "AWS::StackId"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    ]
                }
            }
        },
        "RedshiftSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable inbound access from Etleap to Redshift.",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "54.83.203.147/32",
                        "IpProtocol": "tcp",
                        "FromPort": 5439,
                        "ToPort": 5439
                    },
                    {
                        "CidrIp": "54.235.178.140/32",
                        "IpProtocol": "tcp",
                        "FromPort": 5439,
                        "ToPort": 5439
                    },
                    {
                        "CidrIp": {
                            "Fn::GetAtt": [
                                "VPC",
                                "CidrBlock"
                            ]
                        },
                        "IpProtocol": "tcp",
                        "FromPort": 5439,
                        "ToPort": 5439
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "IpProtocol": "tcp",
                        "FromPort": 3306,
                        "ToPort": 3306
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}-Workshop-Redshift-SecurityGroup"
                        }
                    }
                ]
            }
        },
        "RedshiftClusterSubnetGroup": {
            "Type": "AWS::Redshift::ClusterSubnetGroup",
            "Properties": {
                "Description": "Etleap Redshift Workshop",
                "SubnetIds": [
                    {
                        "Ref": "VPCSubnet"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}-Workshop-Redshift-SubnetGroup"
                        }
                    }
                ]
            }
        },
        "RedshiftIAMRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "RedshiftSpectrumRole"
                        ]
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "redshift.amazonaws.com",
                                    "glue.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "Spectrum-Glue-Access-Policy"
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:GetBucketLocation",
                                        "s3:GetObject",
                                        "s3:ListMultipartUploadParts",
                                        "s3:ListBucket",
                                        "s3:ListBucketMultipartUploads"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:s3:::",
                                                    {
                                                        "Ref": "S3DataLakeBucket"
                                                    }
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:s3:::",
                                                    {
                                                        "Ref": "S3DataLakeBucket"
                                                    },
                                                    "/*"
                                                ]
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "glue:CreateDatabase",
                                        "glue:DeleteDatabase",
                                        "glue:GetDatabase",
                                        "glue:GetDatabases",
                                        "glue:UpdateDatabase",
                                        "glue:CreateTable",
                                        "glue:DeleteTable",
                                        "glue:BatchDeleteTable",
                                        "glue:UpdateTable",
                                        "glue:GetTable",
                                        "glue:GetTables",
                                        "glue:BatchCreatePartition",
                                        "glue:CreatePartition",
                                        "glue:DeletePartition",
                                        "glue:BatchDeletePartition",
                                        "glue:UpdatePartition",
                                        "glue:GetPartition",
                                        "glue:GetPartitions",
                                        "glue:BatchGetPartition",
                                        "logs:*"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "RedshiftClusterParameterGroup": {
            "Type": "AWS::Redshift::ClusterParameterGroup",
            "Properties": {
                "Description": {
                    "Fn::Join": [
                        " ",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            " - Redshift Cluster Parameter group"
                        ]
                    ]
                },
                "ParameterGroupFamily": "redshift-1.0",
                "Parameters": [
                    {
                        "ParameterName": "enable_user_activity_logging",
                        "ParameterValue": "false"
                    },
                    {
                        "ParameterName": "require_ssl",
                        "ParameterValue": "true"
                    },
                    {
                        "ParameterName": "auto_analyze",
                        "ParameterValue": "true"
                    },
                    {
                        "ParameterName": "statement_timeout",
                        "ParameterValue": "7200000"
                    },
                    {
                        "ParameterName": "wlm_json_configuration",
                        "ParameterValue": "[ {\"query_group\" : [ ], \"query_group_wild_card\" : 0, \"user_group\" : [ ], \"user_group_wild_card\" : 0, \"auto_wlm\" : true}, {\"short_query_queue\" : true} ]"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}-Workshop-Redshift-ParameterGroup"
                        }
                    }
                ]
            }
        },
        "RedshiftCluster": {
            "Type": "AWS::Redshift::Cluster",
            "Properties": {
                "AvailabilityZone": "us-east-1a",
                "ClusterType": {
                    "Ref": "RedshiftClusterType"
                },
                "ClusterIdentifier": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            {
                                "Ref": "RedshiftDatabaseName"
                            }
                        ]
                    ]
                },
                "NumberOfNodes": {
                    "Fn::If": [
                        "IsMultiNodeCluster",
                        {
                            "Ref": "RedshiftNodes"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "NodeType": {
                    "Ref": "RedshiftNodeType"
                },
                "DBName": {
                    "Ref": "RedshiftDatabaseName"
                },
                "Encrypted": {
                    "Ref": "RedshiftIsEncryptionAtRest"
                },
                "Port": 5439,
                "MasterUserPassword": {
                    "Ref": "RedshiftPassword"
                },
                "MasterUsername": "root",
                "ClusterParameterGroupName": {
                    "Ref": "RedshiftClusterParameterGroup"
                },
                "VpcSecurityGroupIds": [
                    {
                        "Ref": "RedshiftSecurityGroup"
                    }
                ],
                "AutomatedSnapshotRetentionPeriod": 7,
                "PubliclyAccessible": true,
                "ClusterSubnetGroupName": {
                    "Ref": "RedshiftClusterSubnetGroup"
                },
                "IamRoles": [
                    {
                        "Fn::GetAtt": [
                            "RedshiftIAMRole",
                            "Arn"
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}-Workshop-Redshift-Cluster"
                        }
                    }
                ]
            }
        },
        "GlueCatalogDB": {
            "Type": "AWS::Glue::Database",
            "Properties": {
                "CatalogId": {
                    "Ref": "AWS::AccountId"
                },
                "DatabaseInput": {
                    "Name": {
                        "Fn::Join": [
                            "-",
                            [
                                {
                                    "Ref": "GlueCatalogDatabase"
                                },
                                {
                                    "Fn::Select": [
                                        0,
                                        {
                                            "Fn::Split": [
                                                "-",
                                                {
                                                    "Fn::Select": [
                                                        2,
                                                        {
                                                            "Fn::Split": [
                                                                "/",
                                                                {
                                                                    "Ref": "AWS::StackId"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        ]
                    },
                    "Description": {
                        "Fn::Join": [
                            " ",
                            [
                                "AWS Glue Catalog database from Stack ",
                                {
                                    "Ref": "AWS::StackName"
                                }
                            ]
                        ]
                    }
                }
            }
        },
        "SNSTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
                "Subscription": [
                    {
                        "Endpoint": {
                            "Ref": "NotificationList"
                        },
                        "Protocol": "email"
                    }
                ]
            }
        },
        "DiskSpacealarmredshift": {
            "Type": "AWS::CloudWatch::Alarm",
            "DependsOn": "RedshiftCluster",
            "Properties": {
                "MetricName": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "RedshiftCluster"
                            },
                            "High-PercentageDiskSpaceUsed"
                        ]
                    ]
                },
                "AlarmDescription": {
                    "Fn::Join": [
                        "",
                        [
                            "DiskSpace Utilization > 85% for",
                            {
                                "Ref": "RedshiftCluster"
                            }
                        ]
                    ]
                },
                "Namespace": "AWS/Redshift",
                "Statistic": "Average",
                "Period": "300",
                "EvaluationPeriods": "3",
                "Threshold": "85",
                "AlarmActions": [
                    {
                        "Ref": "SNSTopic"
                    }
                ],
                "Dimensions": [
                    {
                        "Name": "ClusterIdentifier",
                        "Value": {
                            "Ref": "RedshiftCluster"
                        }
                    }
                ],
                "ComparisonOperator": "GreaterThanThreshold",
                "Unit": "Percent"
            }
        },
        "DataLakeRole":{
         "Properties":{
            "AssumeRolePolicyDocument":{
			   "Version": "2012-10-17",
               "Statement":[
                  {
                     "Effect":"Allow",
                     "Principal":{
                        "AWS":[
                           "223848809711"
                        ]
                     },
                     "Action":[
                        "sts:AssumeRole"
                     ],
                     "Condition": {"StringEquals": {"sts:ExternalId": "devdaysfivetwentyeight"}}
                  }              
               ]               
            },
			"Policies": [
				{
					"PolicyName": "etleap_data_lake_policy",
					"PolicyDocument": {
							"Version": "2012-10-17",
    						"Statement": [
									{
										"Effect": "Allow",
										"Action": [
											"s3:GetObject",
											"s3:ListBucket"
										],
										"Resource":[
											"arn:aws:s3:::etleap-redshift-devdays-intermediate/output/*"
										]
									},
									{
										"Effect": "Allow",
										"Action": "s3:ListBucket",
										"Resource": "arn:aws:s3:::etleap-redshift-devdays-intermediate",
										"Condition": {"StringLike":{"s3:prefix":"output*"}}
									},
									{
										"Effect": "Allow",
										"Action": [
											"s3:GetObject",
											"s3:PutObject",
											"s3:DeleteObject"
										],
										"Resource":[
											"arn:aws:s3:::etleap-redshift-workshop-lake-*"
										]
									},
									{
									"Effect": "Allow",
									"Action": "s3:ListBucket",
									"Resource": "arn:aws:s3:::etleap-redshift-workshop-lake-*",
									"Condition": {"StringLike":{"s3:prefix":"*"}}
									}, 
									{
										"Effect": "Allow",
										"Action": [
											"glue:CreateTable",
											"glue:UpdateTable",
											"glue:DeleteTable",
											"glue:BatchCreatePartition",
											"glue:GetPartitions"
										],
										"Resource": [
											"*"
										]
									}]
					}
				}
			],
            "RoleName":"etleap_data_lake_role"
         },
         "Type":"AWS::IAM::Role"
      },
      	"myDBSubnetGroup": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": "description",
                "SubnetIds": [
                    {"Ref": "VPCSubnet"},{"Ref": "VPCSubnet01"}
                ]
            }
        },
     	"MyDB" : {
			"DependsOn": "RedshiftSecurityGroup",
			"Type" : "AWS::RDS::DBInstance",
			"Properties" : {
					"AllocatedStorage" : "5",
					"DBInstanceClass" : "db.t2.micro",
					"Engine" : "MySQL",
					"PubliclyAccessible": "true",
					"EngineVersion" : "8.0.17",
					"MasterUsername" : "etleapuser",
					"MasterUserPassword" : "Password123",
					"DBSnapshotIdentifier": "arn:aws:rds:us-east-1:178461439697:snapshot:etleapimmersionday",
					"VPCSecurityGroups": [{"Ref": "RedshiftSecurityGroup"}],
					"DBSubnetGroupName": {"Ref": "myDBSubnetGroup"}
		  }
    }
    },
    "Outputs": {
        "RedshiftClusterHostnameOutput": {
            "Value": {
                "Fn::GetAtt": [
                    "RedshiftCluster",
                    "Endpoint.Address"
                ]
            },
            "Description": "Redshift hostname"
        },
        "RedshiftClusterPortOutput": {
            "Value": {
                "Fn::GetAtt": [
                    "RedshiftCluster",
                    "Endpoint.Port"
                ]
            },
            "Description": "Redshift port"
        },
        "RedshiftClusterUsernameOutput": {
            "Value": "root",
            "Description": "Redshift username"
        },
        "RedshiftClusterPasswordOutput": {
            "Value": {
                "Ref": "RedshiftPassword"
            },
            "Description": "Redshift password"
        },
        "RedshiftClusterDatabaseOutput": {
            "Value": {
                "Ref": "RedshiftDatabaseName"
            },
            "Description": "Redshift database"
        },
        "RedshiftClusterSchemaOutput": {
            "Value": "public",
            "Description": "Redshift schema"
        },
        "S3DataLakeBucket": {
            "Value": {
                "Ref": "S3DataLakeBucket"
            },
            "Description": "S3 Data Lake bucket"
        },
        "DataLakeIAMUser": {
            "Value": {
                "Ref": "DataLakeIAMUser"
            },
            "Description": "S3 Data Lake IAM User"
        },
        "GlueCatalogDBName": {
            "Value": {
                "Ref": "GlueCatalogDB"
            },
            "Description": "Glue Catalog database"
        },
        "RedshiftSpectrumIAMRole": {
            "Value": {
                "Fn::GetAtt": [
                    "RedshiftIAMRole",
                    "Arn"
                ]
            },
            "Description": "IAM Role assigned to the Redshift cluster"
        },
        "DataLakeRoleARN": {
            "Value": {
                "Fn::GetAtt": [
                    "DataLakeRole",
                    "Arn"
                ]
            },
            "Description": "IAM Role assigned to the DataLake"
        },
        "MySQLInstanceId": {
            "Description": "Address of the MySQL RDS Instance",
            "Value": {"Fn::GetAtt": ["MyDB","Endpoint.Address"]}
            }
 	}
}